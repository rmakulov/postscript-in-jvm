%---
/window {
    /eventProcDict exch def
    /parent exch def
    /h exch def
    /w exch def
    /y exch def
    /x exch def
    /paint {/bd exch def
                bd /x get
                bd /y get
                bd /w get
                bd /h get
                bd /inFocus get

                (graphicsEngine/basics/primitives/window/paintWindow.ps) (r) file run

                bd paintChildren
        } def

    /windowDict <</x x /y y /h h /w w
                        /parent parent /children []
                        /paint      /paint load
                        /eventProcs eventProcDict
                        /inFocus    false
                        %/isPressed  false
 %                       /lastX      0
 %                       /lastY      0
                        /checkBelonging
                            {
                                /element exch def
                                /evY exch def
                                /evX exch def

                                /x element /x get def
                                /y element /y get def
                                /w element /w get def
                                /h element /h get def

                                evX x ge evY y ge and
                                x w add evX ge y h add evY ge and
                                and
                            }
                      >> def
    windowDict addElement

    windowDict /eventProcs get /CLICK {
                /cDict exch def
                repaintAll} addListToDict


    windowDict /eventProcs get /PRESS {
                /cDict exch def

                gelements /mouseX get /mouseX exch def
                gelements /mouseY get /mouseY exch def
                cDict /x get /x exch def
                cDict /y get /y exch def
                cDict /w get /w exch def
                cDict /h get /h exch def

                mouseX mouseY x
                y h add 20 sub
                w 20
                isInRect
                {gelements /draggedElement cDict put

                  (move) cursor
                }
                {

                    %(e_resize) cursor
                }
                ifelse
                cDict moveToFront
                cDict setFocusedElement
                repaintAll} addListToDict


    windowDict /eventProcs get /RELEASE {
                    /cDict exch def
                    gelements /draggedElement null put
                    (default) cursor
                    repaintAll} addListToDict


    windowDict /eventProcs get /DRAG {

                   /cDict exch def
                   %gelements /mouseY get /mouseY exch def
                   %gelements /mouseX get /mouseX exch def
%
                   %cDict /lastY get /lastY exch def
                   %cDict /lastX get /lastX exch def
%
                   %cDict /x cDict /x get mouseX lastX sub add put
                   %cDict /y cDict /y get mouseY lastY sub add put
%
                   %cDict /lastX mouseX put
                   %cDict /lastY mouseY put
%
                   %%lastX print
                   repaintAll
                   } addListToDict


    parent /children
                parent /children get    %(list of children ) print dup print
                windowDict /number get  %(windowNumber ) print dup print
                addToEndOfList          %(resultList ) print dup print
    put

    %windowDict paint
    windowDict
} def
%---
