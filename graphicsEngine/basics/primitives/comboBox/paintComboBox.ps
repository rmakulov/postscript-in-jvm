% ------------PROLOG------------%
/fillExtendedRect{
    /extH labels length oH mul def

    0 extH neg w extH oH add rect

    1 1 1 setrgbcolor
    fill
    0 0 1 setrgbcolor

    0 oH curLabel 1 add mul neg w oH rect

    fill
    0 0 0 setrgbcolor
} def
%-----
/fillSmallRect{

    0 0 w oH rect

    1 1 1 setrgbcolor
    fill
    0 0 0 setrgbcolor

} def
%-----
/drawOptions{
    /labels exch def
    /len labels length def


    1 1 len
    {
        /incr exch def
        incr oH mul /curH exch def

        0 curH neg w oH rect stroke
        gsave
        curLabel incr 1 sub eq
        {
            1 1 1 setrgbcolor
        }
        if

        shift curH neg shift add labels incr 1 sub get drawString
        grestore
    }
    for

} def

%-------------------------
/drawRectCB{
    1 dict begin
    0 0 w oH rect stroke
    end
} def

%----------------------
/triangle{
    /height oH 3 div def
    w height sub oH .65 mul moveto
    height neg 0 rlineto
    height 2 div 0.866 height mul neg rlineto
    closepath
} def

% --------------------------------------BEGIN-----------------------------------------%
gsave
    1 dict begin
        %/rect {roundedRect} def
        /inFocus exch def
        /isOpened exch def
        /curLabel exch def
        /labels  exch def
        /oH exch def
        /oY exch def
        /h exch def
        /w exch def
        /y exch def
        /x exch def

        x oY translate
        /shift 5 def

        /kegel oH shift sub def
        (Rekha) findfont kegel scalefont setfont


        %isOpened print inFocus print
        %(----------------------) print
        drawRectCB
        isOpened inFocus and
        {
            fillExtendedRect
            labels drawOptions
            shift shift labels curLabel get drawString
        }
        {
          %fillSmallRect
          shift shift labels curLabel get drawString
        }
        ifelse

    .3 setlinewidth
    139 131 134 setrgb
    triangle stroke
    triangle fill
    end

grestore
% ------------END------------%