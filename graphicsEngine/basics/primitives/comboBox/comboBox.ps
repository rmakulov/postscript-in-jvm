/comboBox{
    /eventProcDict exch def
    /parent exch def
    /curLabel exch def
    /labels  exch def
    /h exch def
    /w exch def
    /y exch def
    /x exch def
    %---parameters
            x y w h
            parent /x get
            parent /y get
            parent /w get
            parent /h get
        getRelFromAbs
        labels
        curLabel
        parent
        eventProcDict
    relComboBox
} def

%------------------------
/relComboBox {
    /eventProcDict exch def
    /parent exch def
    /curLabel exch def
    /labels  exch def
    /rH exch def
    /rW exch def
    /rY exch def
    /rX exch def
    /paint {/bd exch def
                bd recountCoordinatesCB
                bd /x get
                bd /y get
                bd /w get
                bd /h get

                bd /oldY get
                bd /oldH get
                bd /labels  get
                bd /curLabel get
                bd /isOpened get
                bd /inFocus get
                (graphicsEngine/basics/primitives/comboBox/paintComboBox.ps) (r) file run

                bd paintChildren
        } def

    /y parent /y get parent /h get rY mul add cvi def
    /h parent /h get rH mul cvi def

    /comboBoxDict <<    /rX                 rX
                        /rY                 rY
                        /rH                 rH
                        /rW                 rW
                        /labels             labels

                        /x                  parent /x get parent /w get rX mul add cvi
                        /y                  parent /y get parent /h get rY mul add cvi
                        /h                  parent /h get rH mul cvi
                        /w                  parent /w get rW mul cvi

                        /oldH               h
                        /oldY               y

                        /extH               h labels length 1 add mul cvi
                        /extY               y h labels length mul sub cvi

                        /curLabel           curLabel
                        /parent             parent
                        /children           []
                        /paint              /paint load
                        /eventProcs         eventProcDict
                        /isOpened           false
                        /inFocus            false
                        /isFixed            true
                        /refreshCoordinates /recountCoordinatesCB load

                         /checkBelonging
                                            {
                                                1 dict begin
                                                    /element exch def
                                                    /evY exch def
                                                    /evX exch def

                                                    /x element /x get def
                                                    /w element /w get def

                                                    element /isOpened get
                                                    {
                                                        /y element /extY get def
                                                        /h element /extH get def
                                                    }
                                                    {
                                                        /y element /oldY get def
                                                        /h element /oldH get def
                                                    }
                                                    ifelse

                                                    evX x ge evY y ge and
                                                    x w add evX ge y h add evY ge and
                                                    and
                                                end
                                            }

                      >> def
    comboBoxDict addElement
    


 comboBoxDict /eventProcs get /PRESS {
        /cDict exch def
        cDict  moveToFront
        cDict setFocusedElement
        repaintAll
 } addListToDict

  comboBoxDict /eventProcs get /CLICK {
                (click) print
              /cDict exch def


              cDict/isOpened cDict /isOpened get not put

              cDict /isOpened get %%%% if( isOpened)
              {
                cDict cDict /extY get /y exch put
                cDict cDict /extH get /h exch put
              }
              {
                gelements /mouseY get /mouseY exch def
                cDict /oldY get /oldY exch def
                cDict /oldH get /oldH exch def

                oldY mouseY ge
                {
                  /shiftY oldY mouseY sub def
                  cDict /curLabel shiftY oldH div cvi put
                }
                if


              }
              ifelse

              /parent cDict /parent get def
              cDict /rY          parent /y get cDict /y get sub parent /h get div   put
              cDict /rH          cDict /h get parent /h get div                     put

              repaintAll} addListToDict



    parent /children
                parent /children get
                comboBoxDict /number get
                addToEndOfList
    put


    comboBoxDict
} def
%---

%-------------------------------------
%-------params------------
%----dict       :   dictionary
%    return     :   void
%--------------------------
/recountCoordinatesCB{
    1 dict begin
        /cDict exch def

        cDict /isFixed get not
        {
            /parent cDict /parent get def
            /rX cDict /rX get def
            /rY cDict /rY get def
            /rW cDict /rW get def
            /rH cDict /rH get def

            cDict /x     parent /x get parent /w get rX mul add cvi   put
            cDict /y     parent /y get parent /h get rY mul add cvi   put
            cDict /h     parent /h get rH mul cvi                     put
            cDict /w     parent /w get rW mul cvi                     put

            /y          cDict /y get         def
            /h          cDict /h get         def
            /labels     cDict /labels get    def

            cDict /oldH  h                                            put
            cDict /oldY  y                                            put
            cDict /extH  h labels length 1 add mul cvi                put
            cDict /extY  y h labels length mul sub cvi                put
        }
        if
    end
} def