% ------------PROLOG------------%
%params : x y w h
/rect{
    /hR exch def
    /wR exch def
    /yR exch def
    /xR exch def

    xR yR moveto
    wR 0 rlineto
    0 hR rlineto
    wR neg 0 rlineto
    closepath
} def


% ----- params: x y string
/drawString{
    /str exch def
    /yS exch def
    /xS exch def

    xS yS moveto
    str show

} def
%-------------------------
/drawRect{
    0 0 w h rect
    stroke
} def
%---------params: x y rX rY rW rH----------------
/isInRect {
    /rH exch def
    /rW exch def
    /rY exch def
    /rX exch def

    /pY exch def
    /pX exch def

    rX pX le
    pX rX rW add le
    and

    rY pY le
    pY rY rH add le
    and
    and
} def

%------------------------------------
/getRelFromAbs{
    /parH exch def
    /parW exch def
    /parY exch def
    /parX exch def

    /aH exch def
    /aW exch def
    /aY exch def
    /aX exch def

    aX parX sub parW div
    aY parY sub parH div
    aW parW div
    aH parH div

} def

%-------------------------------------
%-------params------------
%----dict       :   dictionary
%    return     :   void
%--------------------------
/recountCoordinates{
   1 dict  begin
        /cDict exch  def

        cDict /isFixed get not
        {
            /parent cDict /parent get def
            /rX cDict /rX get def
            /rY cDict /rY get def
            /rW cDict /rW get def
            /rH cDict /rH get def

            cDict /x     parent /x get parent /w get rX mul add cvi   put
            cDict /y     parent /y get parent /h get rY mul add cvi   put
            cDict /h     parent /h get rH mul cvi                     put
            cDict /w     parent /w get rW mul cvi                     put
        }
        if
    end
} def