%!PS-Adobe-3.0
%%Creator: cairo 1.13.1 (http://cairographics.org)
%%CreationDate: Wed Sep 24 18:20:33 2014
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A4 595 842 0 () ()
%%BoundingBox: 197 453 372 682
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A4
%%PageBoundingBox: 197 453 372 682
596 842 cairo_set_page_size
%%EndPageSetup
q 197 453 175 229 rectclip q
1 1 0 rg
199.141 634.073 m 217.496 646.753 239.758 653.694 262.066 653.694 c 284.375
 653.694 306.633 646.753 324.988 634.073 c 340.398 623.433 353.055 608.776
 361.066 591.851 c 369.074 574.925 372.387 555.761 370.223 537.159 c 368.055
 518.562 360.379 500.593 348.203 486.366 c 336.027 472.136 319.379 461.737
 301.176 457.331 c 282.977 452.925 263.316 454.585 246.23 462.253 c 229.145
 469.917 214.773 483.589 206.531 500.401 c 198.285 517.214 196.285 537.058
 201.297 555.101 c 206.309 573.144 218.34 589.194 234.406 598.812 c 243.387
 604.183 253.629 607.679 261.375 614.714 c 266.277 619.167 269.98 624.933
 271.988 631.249 c 273.996 637.562 274.305 644.409 272.871 650.878 c 271.441
 657.347 268.273 663.421 263.789 668.3 c 259.305 673.175 253.516 676.843
 247.188 678.808 c 240.859 680.776 234.016 681.042 227.555 679.573 c 221.094
 678.101 215.039 674.894 210.188 670.378 c 205.34 665.862 201.711 660.05
 199.781 653.714 c 197.852 647.374 197.629 640.526 199.141 634.073 c f
0 g
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 841.889771 cm
199.141 207.816 m 217.496 195.137 239.758 188.195 262.066 188.195 c 284.375
 188.195 306.633 195.137 324.988 207.816 c 340.398 218.457 353.055 233.113
 361.066 250.039 c 369.074 266.965 372.387 286.129 370.223 304.73 c 368.055
 323.328 360.379 341.297 348.203 355.523 c 336.027 369.754 319.379 380.152
 301.176 384.559 c 282.977 388.965 263.316 387.305 246.23 379.637 c 229.145
 371.973 214.773 358.301 206.531 341.488 c 198.285 324.676 196.285 304.832
 201.297 286.789 c 206.309 268.746 218.34 252.695 234.406 243.078 c 243.387
 237.707 253.629 234.211 261.375 227.176 c 266.277 222.723 269.98 216.957
 271.988 210.641 c 273.996 204.328 274.305 197.48 272.871 191.012 c 271.441
 184.543 268.273 178.469 263.789 173.59 c 259.305 168.715 253.516 165.047
 247.188 163.082 c 240.859 161.113 234.016 160.848 227.555 162.316 c 221.094
 163.789 215.039 166.996 210.188 171.512 c 205.34 176.027 201.711 181.84
 199.781 188.176 c 197.852 194.516 197.629 201.363 199.141 207.816 c S Q
1 0 0 rg
199.191 638.894 m 198.684 651.734 202.078 661.015 210.18 668.933 c 221.531
 680.026 237.18 682.687 251.762 675.999 c 258.414 672.952 265.902 665.62
 269.012 659.12 c 271.16 654.624 l 259.617 654.183 l 238.809 653.386 221.805
 648.573 205.316 638.816 c 202.336 637.054 199.77 635.609 199.609 635.609
 c 199.453 635.609 199.266 637.089 199.191 638.894 c h
199.191 638.894 m f
Q Q
showpage
%%Trailer
%%EOF
